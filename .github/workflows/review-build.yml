name: System Software review build

on:
  push:
    branches:
      - b0-v*
      - main
      - b1-v*
      - v*
  pull_request:
    branches:
      - main
      - b0-v*
      - b1-v*
      - v*

  workflow_dispatch:

env:
  CMAKE_VERSION: 3.20.5
  WEST_VERSION: 0.14.0
  SDK_VERSION: 0.15.0

jobs:
  src_fetch:
    name: fetch source code
    runs-on: ubuntu-20.04
    steps:
      - name: setup host
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk \
          python3-wheel xz-utils file make gcc gcc-multilib g++-multilib \
          libsdl2-dev

      - name: install west cmake
        run: |
          sudo pip3 install -U setuptools wheel pip
          pip3 install west==${WEST_VERSION}
          pip3 install cmake==${CMAKE_VERSION}

      - name: install toolchain
        run: |
          mkdir -p ${{ runner.temp }}/../toolchain/
          pushd ${{ runner.temp }}/../toolchain/
          wget --no-verbose "https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${SDK_VERSION}/zephyr-sdk-${SDK_VERSION}_linux-x86_64_minimal.tar.gz"
          tar -xf zephyr-sdk-${SDK_VERSION}_linux-x86_64_minimal.tar.gz
          wget --no-verbose "https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${SDK_VERSION}/toolchain_linux-x86_64_arm-zephyr-eabi.tar.gz"
          tar -xf toolchain_linux-x86_64_arm-zephyr-eabi.tar.gz -C zephyr-sdk-${SDK_VERSION}
          readlink -f "${PWD}/zephyr-sdk-${SDK_VERSION}/arm-zephyr-eabi/bin" >> $GITHUB_PATH
          popd

      - name: checkout source
        uses: actions/checkout@v3

      - name: setup west
        run: |
          west init -l .
          west update

      - name: build for primary board
        run: |
          sed -i "s:= zephyr: = zephyr_rv:g" ../.west/config
          west build -b qemu_cortex_m3 samples/hello_world -- -G"Unix Makefiles"
